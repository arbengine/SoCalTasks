{
  "version": 3,
  "sources": ["../../../obliterator/iterator.js", "../../../obliterator/support.js", "../../../obliterator/foreach.js", "../../../mnemonist/utils/typed-arrays.js", "../../../mnemonist/utils/iterables.js", "../../../mnemonist/lru-cache.js", "../../../mnemonist/lru-cache-with-delete.js", "../../../sanity/src/presentation/loader/LoaderQueries.tsx"],
  "sourcesContent": ["/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  if (typeof next !== 'function')\n    throw new Error('obliterator/iterator: expecting a function!');\n\n  this.next = next;\n}\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(function () {\n    return {done: true};\n  });\n\n  return iterator;\n};\n\n/**\n * Returning an iterator over the given indexed sequence.\n *\n * @param  {string|Array} sequence - Target sequence.\n * @return {Iterator}\n */\nIterator.fromSequence = function (sequence) {\n  var i = 0,\n    l = sequence.length;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: sequence[i++]};\n  });\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n", "exports.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined';\nexports.SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n", "/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\nvar support = require('./support.js');\n\nvar ARRAY_BUFFER_SUPPORT = support.ARRAY_BUFFER_SUPPORT;\nvar SYMBOL_SUPPORT = support.SYMBOL_SUPPORT;\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nmodule.exports = function forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable) throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++) callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while (((s = iterator.next()), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n", "/**\n * Mnemonist Typed Array Helpers\n * ==============================\n *\n * Miscellaneous helpers related to typed arrays.\n */\n\n/**\n * When using an unsigned integer array to store pointers, one might want to\n * choose the optimal word size in regards to the actual numbers of pointers\n * to store.\n *\n * This helpers does just that.\n *\n * @param  {number} size - Expected size of the array to map.\n * @return {TypedArray}\n */\nvar MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,\n    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,\n    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;\n\nvar MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,\n    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,\n    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;\n\nexports.getPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_8BIT_INTEGER)\n    return Uint8Array;\n\n  if (maxIndex <= MAX_16BIT_INTEGER)\n    return Uint16Array;\n\n  if (maxIndex <= MAX_32BIT_INTEGER)\n    return Uint32Array;\n\n  throw new Error('mnemonist: Pointer Array of size > 4294967295 is not supported.');\n};\n\nexports.getSignedPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)\n    return Int8Array;\n\n  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)\n    return Int16Array;\n\n  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)\n    return Int32Array;\n\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given number.\n *\n * @param  {number} value - Value to test.\n * @return {TypedArrayClass}\n */\nexports.getNumberType = function(value) {\n\n  // <= 32 bits itnteger?\n  if (value === (value | 0)) {\n\n    // Negative\n    if (Math.sign(value) === -1) {\n      if (value <= 127 && value >= -128)\n        return Int8Array;\n\n      if (value <= 32767 && value >= -32768)\n        return Int16Array;\n\n      return Int32Array;\n    }\n    else {\n\n      if (value <= 255)\n        return Uint8Array;\n\n      if (value <= 65535)\n        return Uint16Array;\n\n      return Uint32Array;\n    }\n  }\n\n  // 53 bits integer & floats\n  // NOTE: it's kinda hard to tell whether we could use 32bits or not...\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given array\n * of JavaScript numbers.\n *\n * @param  {array}    array  - Array to represent.\n * @param  {function} getter - Optional getter.\n * @return {TypedArrayClass}\n */\nvar TYPE_PRIORITY = {\n  Uint8Array: 1,\n  Int8Array: 2,\n  Uint16Array: 3,\n  Int16Array: 4,\n  Uint32Array: 5,\n  Int32Array: 6,\n  Float32Array: 7,\n  Float64Array: 8\n};\n\n// TODO: make this a one-shot for one value\nexports.getMinimalRepresentation = function(array, getter) {\n  var maxType = null,\n      maxPriority = 0,\n      p,\n      t,\n      v,\n      i,\n      l;\n\n  for (i = 0, l = array.length; i < l; i++) {\n    v = getter ? getter(array[i]) : array[i];\n    t = exports.getNumberType(v);\n    p = TYPE_PRIORITY[t.name];\n\n    if (p > maxPriority) {\n      maxPriority = p;\n      maxType = t;\n    }\n  }\n\n  return maxType;\n};\n\n/**\n * Function returning whether the given value is a typed array.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nexports.isTypedArray = function(value) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);\n};\n\n/**\n * Function used to concat byte arrays.\n *\n * @param  {...ByteArray}\n * @return {ByteArray}\n */\nexports.concat = function() {\n  var length = 0,\n      i,\n      o,\n      l;\n\n  for (i = 0, l = arguments.length; i < l; i++)\n    length += arguments[i].length;\n\n  var array = new (arguments[0].constructor)(length);\n\n  for (i = 0, o = 0; i < l; i++) {\n    array.set(arguments[i], o);\n    o += arguments[i].length;\n  }\n\n  return array;\n};\n\n/**\n * Function used to initialize a byte array of indices.\n *\n * @param  {number}    length - Length of target.\n * @return {ByteArray}\n */\nexports.indices = function(length) {\n  var PointerArray = exports.getPointerArray(length);\n\n  var array = new PointerArray(length);\n\n  for (var i = 0; i < length; i++)\n    array[i] = i;\n\n  return array;\n};\n", "/**\n * Mnemonist Iterable Function\n * ============================\n *\n * Harmonized iteration helpers over mixed iterable targets.\n */\nvar forEach = require('obliterator/foreach');\n\nvar typed = require('./typed-arrays.js');\n\n/**\n * Function used to determine whether the given object supports array-like\n * random access.\n *\n * @param  {any} target - Target object.\n * @return {boolean}\n */\nfunction isArrayLike(target) {\n  return Array.isArray(target) || typed.isTypedArray(target);\n}\n\n/**\n * Function used to guess the length of the structure over which we are going\n * to iterate.\n *\n * @param  {any} target - Target object.\n * @return {number|undefined}\n */\nfunction guessLength(target) {\n  if (typeof target.length === 'number')\n    return target.length;\n\n  if (typeof target.size === 'number')\n    return target.size;\n\n  return;\n}\n\n/**\n * Function used to convert an iterable to an array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArray(target) {\n  var l = guessLength(target);\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i++] = value;\n  });\n\n  return array;\n}\n\n/**\n * Same as above but returns a supplementary indices array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArrayWithIndices(target) {\n  var l = guessLength(target);\n\n  var IndexArray = typeof l === 'number' ?\n    typed.getPointerArray(l) :\n    Array;\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n  var indices = typeof l === 'number' ? new IndexArray(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i] = value;\n    indices[i] = i++;\n  });\n\n  return [array, indices];\n}\n\n/**\n * Exporting.\n */\nexports.isArrayLike = isArrayLike;\nexports.guessLength = guessLength;\nexports.toArray = toArray;\nexports.toArrayWithIndices = toArrayWithIndices;\n", "/**\n * Mnemonist LRUCache\n * ===================\n *\n * JavaScript implementation of the LRU Cache data structure. To save up\n * memory and allocations this implementation represents its underlying\n * doubly-linked list as static arrays and pointers. Thus, memory is allocated\n * only once at instantiation and JS objects are never created to serve as\n * pointers. This also means this implementation does not trigger too many\n * garbage collections.\n *\n * Note that to save up memory, a LRU Cache can be implemented using a singly\n * linked list by storing predecessors' pointers as hashmap values.\n * However, this means more hashmap lookups and would probably slow the whole\n * thing down. What's more, pointers are not the things taking most space in\n * memory.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach'),\n    typed = require('./utils/typed-arrays.js'),\n    iterables = require('./utils/iterables.js');\n\n/**\n * LRUCache.\n *\n * @constructor\n * @param {function} Keys     - Array class for storing keys.\n * @param {function} Values   - Array class for storing values.\n * @param {number}   capacity - Desired capacity.\n */\nfunction LRUCache(Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  this.capacity = capacity;\n\n  if (typeof this.capacity !== 'number' || this.capacity <= 0)\n    throw new Error('mnemonist/lru-cache: capacity should be positive number.');\n  else if (!isFinite(this.capacity) || Math.floor(this.capacity) !== this.capacity)\n    throw new Error('mnemonist/lru-cache: capacity should be a finite positive integer.');\n\n  var PointerArray = typed.getPointerArray(capacity);\n\n  this.forward = new PointerArray(capacity);\n  this.backward = new PointerArray(capacity);\n  this.K = typeof Keys === 'function' ? new Keys(capacity) : new Array(capacity);\n  this.V = typeof Values === 'function' ? new Values(capacity) : new Array(capacity);\n\n  // Properties\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nLRUCache.prototype.clear = function() {\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n};\n\n/**\n * Method used to splay a value on top.\n *\n * @param  {number}   pointer - Pointer of the value to splay on top.\n * @return {LRUCache}\n */\nLRUCache.prototype.splayOnTop = function(pointer) {\n  var oldHead = this.head;\n\n  if (this.head === pointer)\n    return this;\n\n  var previous = this.backward[pointer],\n      next = this.forward[pointer];\n\n  if (this.tail === pointer) {\n    this.tail = previous;\n  }\n  else {\n    this.backward[next] = previous;\n  }\n\n  this.forward[previous] = next;\n\n  this.backward[oldHead] = pointer;\n  this.head = pointer;\n  this.forward[pointer] = oldHead;\n\n  return this;\n};\n\n/**\n * Method used to set the value for the given key in the cache.\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {undefined}\n */\nLRUCache.prototype.set = function(key, value) {\n\n  var pointer = this.items[key];\n\n  // The key already exists, we just need to update the value and splay on top\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    this.V[pointer] = value;\n\n    return;\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n};\n\n/**\n * Method used to set the value for the given key in the cache\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {{evicted: boolean, key: any, value: any}} An object containing the\n * key and value of an item that was overwritten or evicted in the set\n * operation, as well as a boolean indicating whether it was evicted due to\n * limited capacity. Return value is null if nothing was evicted or overwritten\n * during the set operation.\n */\nLRUCache.prototype.setpop = function(key, value) {\n  var oldValue = null;\n  var oldKey = null;\n\n  var pointer = this.items[key];\n\n  // The key already exists, we just need to update the value and splay on top\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    oldValue = this.V[pointer];\n    this.V[pointer] = value;\n    return {evicted: false, key: key, value: oldValue};\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    oldValue = this.V[pointer];\n    oldKey = this.K[pointer];\n    delete this.items[oldKey];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n\n  // Return object if eviction took place, otherwise return null\n  if (oldKey) {\n    return {evicted: true, key: oldKey, value: oldValue};\n  }\n  else {\n    return null;\n  }\n};\n\n/**\n * Method used to check whether the key exists in the cache.\n *\n * @param  {any} key   - Key.\n * @return {boolean}\n */\nLRUCache.prototype.has = function(key) {\n  return key in this.items;\n};\n\n/**\n * Method used to get the value attached to the given key. Will move the\n * related key to the front of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.get = function(key) {\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined')\n    return;\n\n  this.splayOnTop(pointer);\n\n  return this.V[pointer];\n};\n\n/**\n * Method used to get the value attached to the given key. Does not modify\n * the ordering of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.peek = function(key) {\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined')\n    return;\n\n  return this.V[pointer];\n};\n\n/**\n * Method used to iterate over the cache's entries using a callback.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nLRUCache.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  while (i < l) {\n\n    callback.call(scope, values[pointer], keys[pointer], this);\n    pointer = forward[pointer];\n\n    i++;\n  }\n};\n\n/**\n * Method used to create an iterator over the cache's keys from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.keys = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: key\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's values from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.values = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: value\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's entries from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.entries = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer],\n        value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: [key, value]\n    };\n  });\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.iterator] = LRUCache.prototype.entries;\n\n/**\n * Convenience known methods.\n */\nLRUCache.prototype.inspect = function() {\n  var proxy = new Map();\n\n  var iterator = this.entries(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    proxy.set(step.value[0], step.value[1]);\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: LRUCache,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.for('nodejs.util.inspect.custom')] = LRUCache.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {function} Keys     - Array class for storing keys.\n * @param  {function} Values   - Array class for storing values.\n * @param  {number}   capacity - Cache's capacity.\n * @return {LRUCache}\n */\nLRUCache.from = function(iterable, Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/lru-cache.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n  else if (arguments.length === 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  var cache = new LRUCache(Keys, Values, capacity);\n\n  forEach(iterable, function(value, key) {\n    cache.set(key, value);\n  });\n\n  return cache;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = LRUCache;\n", "/**\n * Mnemonist LRUCacheWithDelete\n * =============================\n *\n * An extension of LRUCache with delete functionality.\n */\n\nvar LRUCache = require('./lru-cache.js'),\n    forEach = require('obliterator/foreach'),\n    typed = require('./utils/typed-arrays.js'),\n    iterables = require('./utils/iterables.js');\n\n// The only complication with deleting items is that the LRU's\n// performance depends on having a fixed-size list of pointers; the\n// doubly-linked-list is happy to expand and contract.\n//\n// On delete, we record the position of the former item's pointer in a\n// list of \"holes\" in the pointer array. On insert, if there is a hole\n// the new pointer slots in to fill the hole; otherwise, it is\n// appended as usual. (Note: we are only talking here about the\n// internal pointer list. setting or getting an item promotes it\n// to the top of the LRU ranking no matter what came before)\n\nfunction LRUCacheWithDelete(Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    LRUCache.call(this, Keys);\n  }\n  else {\n    LRUCache.call(this, Keys, Values, capacity);\n  }\n  var PointerArray = typed.getPointerArray(this.capacity);\n  this.deleted = new PointerArray(this.capacity);\n  this.deletedSize = 0;\n}\n\nfor (var k in LRUCache.prototype)\n  LRUCacheWithDelete.prototype[k] = LRUCache.prototype[k];\nif (typeof Symbol !== 'undefined')\n  LRUCacheWithDelete.prototype[Symbol.iterator] = LRUCache.prototype[Symbol.iterator];\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nLRUCacheWithDelete.prototype.clear = function() {\n  LRUCache.prototype.clear.call(this);\n  this.deletedSize = 0;\n};\n\n/**\n * Method used to set the value for the given key in the cache.\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {undefined}\n */\nLRUCacheWithDelete.prototype.set = function(key, value) {\n\n  var pointer = this.items[key];\n\n  // The key already exists, we just need to update the value and splay on top\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    this.V[pointer] = value;\n\n    return;\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    if (this.deletedSize > 0) {\n      // If there is a \"hole\" in the pointer list, reuse it\n      pointer = this.deleted[--this.deletedSize];\n    }\n    else {\n      // otherwise append to the pointer list\n      pointer = this.size;\n    }\n    this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n};\n\n/**\n * Method used to set the value for the given key in the cache\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {{evicted: boolean, key: any, value: any}} An object containing the\n * key and value of an item that was overwritten or evicted in the set\n * operation, as well as a boolean indicating whether it was evicted due to\n * limited capacity. Return value is null if nothing was evicted or overwritten\n * during the set operation.\n */\nLRUCacheWithDelete.prototype.setpop = function(key, value) {\n  var oldValue = null;\n  var oldKey = null;\n\n  var pointer = this.items[key];\n\n  // The key already exists, we just need to update the value and splay on top\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    oldValue = this.V[pointer];\n    this.V[pointer] = value;\n    return {evicted: false, key: key, value: oldValue};\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    if (this.deletedSize > 0) {\n      // If there is a \"hole\" in the pointer list, reuse it\n      pointer = this.deleted[--this.deletedSize];\n    }\n    else {\n      // otherwise append to the pointer list\n      pointer = this.size;\n    }\n    this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    oldValue = this.V[pointer];\n    oldKey = this.K[pointer];\n    delete this.items[oldKey];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n\n  // Return object if eviction took place, otherwise return null\n  if (oldKey) {\n    return {evicted: true, key: oldKey, value: oldValue};\n  }\n  else {\n    return null;\n  }\n};\n\n/**\n * Method used to delete the entry for the given key in the cache.\n *\n * @param  {any} key   - Key.\n * @return {boolean}   - true if the item was present\n */\nLRUCacheWithDelete.prototype.delete = function(key) {\n\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined') {\n    return false;\n  }\n\n  delete this.items[key];\n\n  if (this.size === 1) {\n    this.size = 0;\n    this.head = 0;\n    this.tail = 0;\n    this.deletedSize = 0;\n    return true;\n  }\n\n  var previous = this.backward[pointer],\n      next = this.forward[pointer];\n\n  if (this.head === pointer) {\n    this.head = next;\n  }\n  if (this.tail === pointer) {\n    this.tail = previous;\n  }\n\n  this.forward[previous] = next;\n  this.backward[next] = previous;\n\n  this.size--;\n  this.deleted[this.deletedSize++] = pointer;\n\n  return true;\n};\n\n/**\n * Method used to remove and return the value for the given key in the cache.\n *\n * @param  {any} key                 - Key.\n * @param  {any} [missing=undefined] - Value to return if item is absent\n * @return {any} The value, if present; the missing indicator if absent\n */\nLRUCacheWithDelete.prototype.remove = function(key, missing = undefined) {\n\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined') {\n    return missing;\n  }\n\n  var dead = this.V[pointer];\n  delete this.items[key];\n\n  if (this.size === 1) {\n    this.size = 0;\n    this.head = 0;\n    this.tail = 0;\n    this.deletedSize = 0;\n    return dead;\n  }\n\n  var previous = this.backward[pointer],\n      next = this.forward[pointer];\n\n  if (this.head === pointer) {\n    this.head = next;\n  }\n  if (this.tail === pointer) {\n    this.tail = previous;\n  }\n\n  this.forward[previous] = next;\n  this.backward[next] = previous;\n\n  this.size--;\n  this.deleted[this.deletedSize++] = pointer;\n\n  return dead;\n};\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {function} Keys     - Array class for storing keys.\n * @param  {function} Values   - Array class for storing values.\n * @param  {number}   capacity - Cache's capacity.\n * @return {LRUCacheWithDelete}\n */\nLRUCacheWithDelete.from = function(iterable, Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/lru-cache.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n  else if (arguments.length === 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  var cache = new LRUCacheWithDelete(Keys, Values, capacity);\n\n  forEach(iterable, function(value, key) {\n    cache.set(key, value);\n  });\n\n  return cache;\n};\n\nmodule.exports = LRUCacheWithDelete;\n", "import {\n  type ClientConfig,\n  type ClientPerspective,\n  type ContentSourceMap,\n  type QueryParams,\n  type SyncTag,\n} from '@sanity/client'\nimport {applySourceDocuments, getPublishedId} from '@sanity/client/csm'\nimport {\n  type ChannelInstance,\n  type Controller,\n  createConnectionMachine,\n  type StatusEvent,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type LoaderControllerMsg,\n  type LoaderNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {applyPatch} from 'mendoza'\nimport LRUCache from 'mnemonist/lru-cache-with-delete'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {\n  type SanityClient,\n  type SanityDocument,\n  useClient,\n  // useCurrentUser,\n  useDataset,\n  useProjectId,\n} from 'sanity'\n\nimport {\n  LIVE_QUERY_CACHE_BATCH_SIZE,\n  LIVE_QUERY_CACHE_SIZE,\n  MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n} from '../constants'\nimport {\n  type LiveQueriesState,\n  type LiveQueriesStateValue,\n  type LoaderConnection,\n  type PresentationPerspective,\n} from '../types'\nimport {type DocumentOnPage} from '../useDocumentsOnPage'\nimport {mapChangedValue, useQueryParams, useRevalidate} from './utils'\n\nexport interface LoaderQueriesProps {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  controller: Controller | undefined\n  perspective: ClientPerspective\n  documentsOnPage: {_id: string; _type: string}[]\n  onLoadersConnection: (event: StatusEvent) => void\n  onDocumentsOnPage: (\n    key: string,\n    perspective: PresentationPerspective,\n    state: DocumentOnPage[],\n  ) => void\n}\n\nexport default function LoaderQueries(props: LoaderQueriesProps): React.JSX.Element {\n  const {\n    liveDocument,\n    controller,\n    perspective: activePerspective,\n    documentsOnPage,\n    onLoadersConnection,\n    onDocumentsOnPage,\n  } = props\n\n  const [comlink, setComlink] = useState<ChannelInstance<LoaderControllerMsg, LoaderNodeMsg>>()\n  const [liveQueries, setLiveQueries] = useState<LiveQueriesState>({})\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        setLiveQueries((liveQueries) => {\n          if (Object.keys(liveQueries).length < 1) {\n            return liveQueries\n          }\n\n          const now = Date.now()\n          const hasAnyExpired = Object.values(liveQueries).some(\n            // eslint-disable-next-line max-nested-callbacks\n            (liveQuery) =>\n              liveQuery.heartbeat !== false && now > liveQuery.receivedAt + liveQuery.heartbeat,\n          )\n          if (!hasAnyExpired) {\n            return liveQueries\n          }\n          const next = {} as LiveQueriesState\n          for (const [key, value] of Object.entries(liveQueries)) {\n            if (value.heartbeat !== false && now > value.receivedAt + value.heartbeat) {\n              continue\n            }\n            next[key] = value\n          }\n          return next\n        }),\n      MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n    )\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    if (controller) {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const comlink = controller.createChannel<LoaderControllerMsg, LoaderNodeMsg>(\n        {\n          name: 'presentation',\n          connectTo: 'loaders',\n          heartbeat: true,\n        },\n        createConnectionMachine<LoaderControllerMsg, LoaderNodeMsg>().provide({\n          actors: createCompatibilityActors<LoaderControllerMsg>(),\n        }),\n      )\n      setComlink(comlink)\n\n      comlink.onStatus(onLoadersConnection)\n\n      comlink.on('loader/documents', (data) => {\n        if (data.projectId === projectId && data.dataset === dataset) {\n          onDocumentsOnPage(\n            'loaders',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data.perspective as unknown as any,\n            data.documents,\n          )\n        }\n      })\n\n      comlink.on('loader/query-listen', (data) => {\n        if (data.projectId === projectId && data.dataset === dataset) {\n          if (\n            typeof data.heartbeat === 'number' &&\n            data.heartbeat < MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL\n          ) {\n            throw new Error(\n              `Loader query listen heartbeat interval must be at least ${MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL}ms`,\n            )\n          }\n          setLiveQueries((prev) => ({\n            ...prev,\n            [getQueryCacheKey(data.query, data.params)]: {\n              perspective: data.perspective,\n              query: data.query,\n              params: data.params,\n              receivedAt: Date.now(),\n              heartbeat: data.heartbeat ?? false,\n            } satisfies LiveQueriesStateValue,\n          }))\n        }\n      })\n\n      return comlink.start()\n    }\n    return undefined\n  }, [controller, dataset, onDocumentsOnPage, onLoadersConnection, projectId])\n\n  const [cache] = useState(() => new LRUCache<string, SanityDocument>(LIVE_QUERY_CACHE_SIZE))\n  const studioClient = useClient({apiVersion: '2023-10-16'})\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [studioClient],\n  )\n  useEffect(() => {\n    if (comlink) {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {projectId, dataset} = clientConfig\n      comlink.post('loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective: activePerspective,\n      })\n    }\n  }, [comlink, clientConfig, activePerspective])\n\n  const turboIds = useMemo(() => {\n    const documentsActuallyInUse = documentsOnPage.map(({_id}) => _id)\n    const set = new Set(documentsActuallyInUse)\n    const ids = [...set]\n    const max = cache.capacity\n    if (ids.length >= max) {\n      ids.length = max\n    }\n    return ids\n  }, [cache.capacity, documentsOnPage])\n\n  const [documentsCacheLastUpdated, setDocumentsCacheLastUpdated] = useState(0)\n\n  return (\n    <>\n      <Turbo\n        cache={cache}\n        client={client}\n        turboIds={turboIds}\n        setDocumentsCacheLastUpdated={setDocumentsCacheLastUpdated}\n      />\n      {Object.entries(liveQueries).map(([key, {query, params, perspective}]) => (\n        <QuerySubscription\n          key={`${key}${perspective}`}\n          cache={cache}\n          projectId={clientConfig.projectId!}\n          dataset={clientConfig.dataset!}\n          perspective={perspective}\n          query={query}\n          params={params}\n          comlink={comlink}\n          client={client}\n          refreshInterval={activePerspective ? 2000 : 0}\n          liveDocument={liveDocument}\n          documentsCacheLastUpdated={documentsCacheLastUpdated}\n        />\n      ))}\n    </>\n  )\n}\n\ninterface SharedProps {\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n  /**\n   * How frequently queries should be refetched in the background to refresh the parts of queries that can't be source mapped.\n   * Setting it to `0` will disable background refresh.\n   * @defaultValue 10000\n   */\n  refreshInterval?: number\n  /**\n   * The documents cache to use for turbo-charging queries.\n   */\n  cache: LRUCache<string, SanityDocument>\n}\n\ninterface TurboProps extends Pick<SharedProps, 'client' | 'cache'> {\n  turboIds: string[]\n  setDocumentsCacheLastUpdated: (timestamp: number) => void\n}\n/**\n * A turbo-charged mutation observer that uses Content Source Maps to apply mendoza patches on your queries\n */\nconst Turbo = memo(function Turbo(props: TurboProps) {\n  const {cache, client, turboIds, setDocumentsCacheLastUpdated} = props\n  // Figure out which documents are missing from the cache\n  const [batch, setBatch] = useState<string[][]>([])\n  useEffect(() => {\n    const batchSet = new Set(batch.flat())\n    const nextBatch = new Set<string>()\n    for (const turboId of turboIds) {\n      if (!batchSet.has(turboId) && !cache.has(turboId)) {\n        nextBatch.add(turboId)\n      }\n    }\n    const nextBatchSlice = [...nextBatch].slice(0, LIVE_QUERY_CACHE_BATCH_SIZE)\n    if (nextBatchSlice.length === 0) return undefined\n    const raf = requestAnimationFrame(() =>\n      // eslint-disable-next-line max-nested-callbacks\n      setBatch((prevBatch) => [...prevBatch.slice(-LIVE_QUERY_CACHE_BATCH_SIZE), nextBatchSlice]),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [batch, cache, turboIds])\n\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    const subscription = client\n      .listen(\n        '*',\n        {},\n        {\n          events: ['mutation'],\n          effectFormat: 'mendoza',\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-loader',\n        },\n      )\n      .subscribe((update) => {\n        if (update.type === 'mutation' && update.transition === 'disappear') {\n          if (cache.delete(update.documentId)) {\n            setDocumentsCacheLastUpdated(Date.now())\n          }\n        }\n\n        if (update.type !== 'mutation' || !update.effects?.apply?.length) return\n        // Schedule a reach state update with the ID of the document that were mutated\n        // This react handler will apply the document to related source map snapshots\n        const cachedDocument = cache.peek(update.documentId)\n        if (cachedDocument as SanityDocument) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const patchDoc = {...cachedDocument} as any\n          delete patchDoc._rev\n          const patchedDocument = applyPatch(patchDoc, update.effects.apply)\n          cache.set(update.documentId, patchedDocument)\n          setDocumentsCacheLastUpdated(Date.now())\n        }\n      })\n    return () => subscription.unsubscribe()\n  }, [cache, client, setDocumentsCacheLastUpdated])\n\n  return (\n    <>\n      {batch.map((ids) => (\n        <GetDocuments\n          key={JSON.stringify(ids)}\n          cache={cache}\n          client={client}\n          ids={ids}\n          setDocumentsCacheLastUpdated={setDocumentsCacheLastUpdated}\n        />\n      ))}\n    </>\n  )\n})\n\ninterface GetDocumentsProps extends Pick<SharedProps, 'client' | 'cache'> {\n  ids: string[]\n  setDocumentsCacheLastUpdated: (timestamp: number) => void\n}\nconst GetDocuments = memo(function GetDocuments(props: GetDocumentsProps) {\n  const {client, cache, ids, setDocumentsCacheLastUpdated} = props\n\n  useEffect(() => {\n    const missingIds = ids.filter((id) => !cache.has(id))\n    if (missingIds.length === 0) return\n    client.getDocuments(missingIds).then((documents) => {\n      for (const doc of documents) {\n        if (doc && doc?._id) {\n          cache.set(doc._id, doc)\n          setDocumentsCacheLastUpdated(Date.now())\n        }\n      }\n      // eslint-disable-next-line no-console\n    }, console.error)\n  }, [cache, client, ids, setDocumentsCacheLastUpdated])\n\n  return null\n})\nGetDocuments.displayName = 'GetDocuments'\n\ninterface QuerySubscriptionProps\n  extends Pick<\n    UseQuerySubscriptionProps,\n    'client' | 'cache' | 'refreshInterval' | 'liveDocument' | 'documentsCacheLastUpdated'\n  > {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  comlink: LoaderConnection | undefined\n}\nfunction QuerySubscription(props: QuerySubscriptionProps) {\n  const {\n    cache,\n    projectId,\n    dataset,\n    perspective,\n    query,\n    client,\n    refreshInterval,\n    liveDocument,\n    comlink,\n    documentsCacheLastUpdated,\n  } = props\n\n  const params = useQueryParams(props.params)\n  const data = useQuerySubscription({\n    cache,\n    client,\n    liveDocument,\n    params,\n    perspective,\n    query,\n    refreshInterval,\n    documentsCacheLastUpdated,\n  })\n  const result = data?.result\n  const resultSourceMap = data?.resultSourceMap\n  const tags = data?.tags\n\n  useEffect(() => {\n    if (resultSourceMap) {\n      comlink?.post('loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n        tags,\n      })\n    }\n  }, [comlink, dataset, params, perspective, projectId, query, result, resultSourceMap, tags])\n\n  return null\n}\n\ninterface UseQuerySubscriptionProps\n  extends Required<Pick<SharedProps, 'client' | 'refreshInterval' | 'cache'>> {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  query: string\n  params: QueryParams\n  perspective: ClientPerspective\n  documentsCacheLastUpdated: number\n}\nfunction useQuerySubscription(props: UseQuerySubscriptionProps) {\n  const {\n    cache,\n    liveDocument,\n    client,\n    refreshInterval,\n    query,\n    params,\n    perspective,\n    documentsCacheLastUpdated,\n  } = props\n  const [snapshot, setSnapshot] = useState<{\n    result: unknown\n    resultSourceMap?: ContentSourceMap\n    tags?: SyncTag[]\n  } | null>(null)\n  const {projectId, dataset} = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {projectId, dataset} = client.config()\n    return {projectId, dataset} as Required<Pick<ClientConfig, 'projectId' | 'dataset'>>\n  }, [client])\n\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({refreshInterval})\n  const shouldRefetch = revalidate === 'refresh' || revalidate === 'inflight'\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return undefined\n    }\n\n    let fulfilled = false\n    let fetching = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const {signal} = controller\n      fetching = true\n      const {result, resultSourceMap, syncTags} = await client.fetch(query, params, {\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n      })\n      fetching = false\n\n      if (!signal.aborted) {\n        setSnapshot({result, resultSourceMap, tags: syncTags})\n\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      .catch((error) => {\n        fetching = false\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled && !fetching) {\n        controller.abort()\n      }\n    }\n  }, [\n    client,\n    dataset,\n    liveDocument,\n    params,\n    perspective,\n    projectId,\n    query,\n    shouldRefetch,\n    startRefresh,\n  ])\n\n  return useMemo(() => {\n    if (documentsCacheLastUpdated && snapshot?.resultSourceMap) {\n      return {\n        result: turboChargeResultIfSourceMap(\n          cache,\n          liveDocument,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        ),\n        resultSourceMap: snapshot.resultSourceMap,\n      }\n    }\n    return snapshot\n  }, [cache, documentsCacheLastUpdated, liveDocument, perspective, snapshot])\n}\n\nlet warnedAboutCrossDatasetReference = false\nexport function turboChargeResultIfSourceMap<T = unknown>(\n  cache: SharedProps['cache'],\n  liveDocument: Partial<SanityDocument> | null | undefined,\n  result: T,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): T {\n  if (perspective === 'raw') {\n    throw new Error('turboChargeResultIfSourceMap does not support raw perspective')\n  }\n  return applySourceDocuments(\n    result,\n    resultSourceMap,\n    (sourceDocument) => {\n      if (sourceDocument._projectId) {\n        // @TODO Handle cross dataset references\n        if (!warnedAboutCrossDatasetReference) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          warnedAboutCrossDatasetReference = true\n        }\n        return undefined\n      }\n      // If there's a displayed document, always prefer it\n      if (\n        liveDocument?._id &&\n        getPublishedId(liveDocument._id) === getPublishedId(sourceDocument._id)\n      ) {\n        if (typeof liveDocument._id === 'string' && typeof sourceDocument._type === 'string') {\n          return liveDocument as unknown as Required<Pick<SanityDocument, '_id' | '_type'>>\n        }\n        return {\n          ...liveDocument,\n          _id: liveDocument._id || sourceDocument._id,\n          _type: liveDocument._type || sourceDocument._type,\n        }\n      }\n      // Fallback to general documents cache\n      return cache.get(sourceDocument._id)\n    },\n    mapChangedValue,\n    perspective,\n  )\n}\n\nfunction getQueryCacheKey(query: string, params: QueryParams | string): `${string}-${string}` {\n  return `${query}-${typeof params === 'string' ? params : JSON.stringify(params)}`\n}\n"],
  "mappings": "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",
  "names": ["LRUCache", "LRUCache", "LoaderQueries", "props", "liveDocument", "controller", "perspective", "activePerspective", "documentsOnPage", "onLoadersConnection", "onDocumentsOnPage", "comlink", "setComlink", "useState", "liveQueries", "setLiveQueries", "projectId", "useProjectId", "dataset", "useDataset", "useEffect", "interval", "setInterval", "Object", "keys", "length", "now", "Date", "values", "some", "liveQuery", "heartbeat", "receivedAt", "next", "key", "value", "entries", "MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL", "clearInterval", "createChannel", "name", "connectTo", "createConnectionMachine", "provide", "actors", "createCompatibilityActors", "onStatus", "on", "data", "documents", "Error", "prev", "getQueryCacheKey", "query", "params", "start", "cache", "LRUCache", "LIVE_QUERY_CACHE_SIZE", "studioClient", "useClient", "apiVersion", "clientConfig", "useMemo", "config", "client", "withConfig", "resultSourceMap", "post", "turboIds", "documentsActuallyInUse", "map", "_id", "ids", "Set", "max", "capacity", "documentsCacheLastUpdated", "setDocumentsCacheLastUpdated", "Turbo", "memo", "batch", "setBatch", "batchSet", "flat", "nextBatch", "turboId", "has", "add", "nextBatchSlice", "slice", "LIVE_QUERY_CACHE_BATCH_SIZE", "raf", "requestAnimationFrame", "prevBatch", "cancelAnimationFrame", "subscription", "listen", "events", "effectFormat", "includePreviousRevision", "includeResult", "tag", "subscribe", "update", "type", "transition", "delete", "documentId", "effects", "apply", "cachedDocument", "peek", "patchDoc", "_rev", "patchedDocument", "applyPatch", "set", "unsubscribe", "JSON", "stringify", "GetDocuments", "missingIds", "filter", "id", "getDocuments", "then", "doc", "console", "error", "displayName", "QuerySubscription", "$", "_c", "refreshInterval", "useQueryParams", "t0", "useQuerySubscription", "result", "tags", "t1", "t2", "snapshot", "setSnapshot", "setError", "revalidate", "startRefresh", "useRevalidate", "shouldRefetch", "fulfilled", "fetching", "AbortController", "effect", "signal", "syncTags", "fetch", "filterResponse", "aborted", "onFinally", "catch", "finally", "abort", "turboChargeResultIfSourceMap", "warnedAboutCrossDatasetReference", "applySourceDocuments", "sourceDocument", "_projectId", "warn", "getPublishedId", "_type", "get", "mapChangedValue"]
}
