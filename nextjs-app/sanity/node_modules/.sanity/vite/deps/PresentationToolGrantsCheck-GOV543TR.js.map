{
  "version": 3,
  "sources": ["../../../@sanity/preview-url-secret/src/constants.ts", "../../../@sanity/preview-url-secret/src/withoutSecretSearchParams.ts", "../../../@sanity/preview-url-secret/src/generateSecret.ts", "../../../@sanity/preview-url-secret/src/togglePreviewAccessSharing.ts", "../../../path-to-regexp/src/index.ts", "../../../@sanity/preview-url-secret/src/createPreviewSecret.ts", "../../../@sanity/preview-url-secret/src/definePreviewUrl.ts", "../../../suspend-react/index.js", "../../../@sanity/preview-url-secret/src/toggleVercelProtectionBypass.ts", "../../../sanity/src/presentation/features/PostMessageFeatures.tsx", "../../../sanity/src/presentation/lib/debounce.ts", "../../../sanity/src/presentation/overlays/SharedStateProvider.tsx", "../../../sanity/src/presentation/panels/Panel.tsx", "../../../sanity/src/presentation/panels/usePanelsStorage.ts", "../../../sanity/src/presentation/panels/util.ts", "../../../sanity/src/presentation/panels/Panels.tsx", "../../../sanity/src/presentation/components/ErrorCard.tsx", "../../../sanity/src/presentation/editor/PresentationPaneRouterProvider.tsx", "../../../sanity/src/presentation/editor/DocumentListPane.tsx", "../../../sanity/src/presentation/editor/DocumentPane.tsx", "../../../sanity/src/presentation/editor/DocumentPanel.tsx", "../../../sanity/src/presentation/editor/usePreviewState.ts", "../../../sanity/src/presentation/editor/ContentEditor.tsx", "../../../sanity/src/presentation/panels/usePanelId.ts", "../../../sanity/src/presentation/panels/PanelResizer.tsx", "../../../sanity/src/presentation/PresentationContent.tsx", "../../../sanity/src/presentation/PresentationNavigateProvider.tsx", "../../../sanity/src/presentation/useLocalState.ts", "../../../sanity/src/presentation/PresentationNavigator.tsx", "../../../sanity/src/presentation/PresentationParamsProvider.tsx", "../../../sanity/src/presentation/PresentationProvider.tsx", "../../../sanity/src/presentation/preview/IFrame.tsx", "../../../sanity/src/presentation/preview/OpenPreviewButton.tsx", "../../../sanity/src/presentation/preview/PreviewLocationInput.tsx", "../../../sanity/src/presentation/preview/SharePreviewMenu.tsx", "../../../sanity/src/presentation/preview/PreviewHeader.tsx", "../../../sanity/src/presentation/preview/Preview.tsx", "../../../sanity/src/presentation/util/useEffectOnChange.ts", "../../../sanity/src/presentation/RevisionSwitcher.tsx", "../../../sanity/src/presentation/util/warnOnce.ts", "../../../sanity/src/presentation/useDocumentsOnPage.ts", "../../../sanity/src/presentation/useMainDocument.ts", "../../../.pnpm/@sanity+visual-editing-csm@2.0.2_@sanity+client@6.27.2_debug@4.4.0__@sanity+types@packages+@sanity+types/node_modules/@sanity/visual-editing-csm/dist/index.js", "../../../sanity/src/presentation/lib/parse.ts", "../../../sanity/src/presentation/useParams.ts", "../../../sanity/src/presentation/usePopups.ts", "../../../sanity/src/presentation/usePreviewUrl.ts", "../../../sanity/src/presentation/useStatus.ts", "../../../sanity/src/presentation/PresentationTool.tsx", "../../../sanity/src/presentation/useVercelBypassSecret.ts", "../../../sanity/src/presentation/PresentationToolGrantsCheck.tsx"],
  "sourcesContent": ["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n  PreviewUrlSecretSchemaTypeSingleton,\n  VercelProtectionBypassSchemaType,\n} from './types'\n\n/** @internal */\nexport const schemaType = 'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix = 'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const schemaIdSingleton = `${schemaIdPrefix}.share-access` as const\n\n/** @internal */\nexport const schemaTypeSingleton =\n  'sanity.previewUrlShareAccess' satisfies PreviewUrlSecretSchemaTypeSingleton\n\n/** @internal */\nexport const apiVersion = '2023-11-09'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const urlSearchParamPreviewPerspective = 'sanity-preview-perspective'\n\n/** @internal */\nexport const urlSearchParamVercelProtectionBypass = 'x-vercel-protection-bypass'\n\n/** @internal */\nexport const urlSearchParamVercelSetBypassCookie = 'x-vercel-set-bypass-cookie'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }` as const\n\n/** @internal */\nexport const fetchSharedAccessQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret` as const\n\n/** @internal */\nexport const fetchSharedAccessSecretQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/** @internal */\nexport const vercelProtectionBypassSchemaType =\n  'sanity.vercelProtectionBypass' satisfies VercelProtectionBypassSchemaType\n\n/** @internal */\nexport const vercelProtectionBypassSchemaId = `${schemaIdPrefix}.vercel-protection-bypass` as const\n\n/** @internal */\nexport const fetchVercelProtectionBypassSecret =\n  /* groq */ `*[_id == \"${vercelProtectionBypassSchemaId}\" && _type == \"${vercelProtectionBypassSchemaType}\"][0].secret` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n\n/** @internal */\nexport const perspectiveCookieName = 'sanity-preview-perspective'\n\nexport type {VercelSetBypassCookieValue} from './types'\n", "import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  searchParams.delete(urlSearchParamVercelProtectionBypass)\n  searchParams.delete(urlSearchParamVercelSetBypassCookie)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string | null,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  // Preview secrets are added when preview mode is setup with an `enable` endpoint\n  if (secret) {\n    searchParams.set(urlSearchParamPreviewSecret, secret)\n    searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  }\n  // Always set the perspective that's being used\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n\n  return newUrl\n}\n", "/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i].toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n", "import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n", "import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from './constants'\nimport type {\n  PreviewUrlResolver,\n  PreviewUrlResolverContext,\n  PreviewUrlResolverOptions,\n} from './types'\n\n/**\n * @internal\n */\nexport function definePreviewUrl<SanityClientType>(\n  options: PreviewUrlResolverOptions,\n): PreviewUrlResolver<SanityClientType> {\n  const {\n    draftMode,\n    previewMode,\n    origin = typeof location === 'undefined' ? 'https://localhost' : location.origin,\n  } = options\n  const enableUrl = previewMode?.enable || draftMode?.enable\n  let {preview = '/'} = options\n  const productionUrl = new URL(preview, origin)\n  const enablePreviewModeUrl = enableUrl ? new URL(enableUrl, origin) : undefined\n\n  return async (context): Promise<string> => {\n    try {\n      if (context.previewSearchParam) {\n        const restoredUrl = new URL(context.previewSearchParam, productionUrl)\n        if (restoredUrl.origin === productionUrl.origin) {\n          preview = `${restoredUrl.pathname}${restoredUrl.search}`\n        }\n      }\n    } catch {\n      // ignore\n    }\n    // Prevent infinite recursion\n    if (\n      typeof location !== 'undefined' &&\n      location.origin === productionUrl.origin &&\n      context.studioBasePath &&\n      (preview.startsWith(`${context.studioBasePath}/`) || preview === context.studioBasePath)\n    ) {\n      preview = options.preview || '/'\n    }\n    const previewUrl = new URL(preview, productionUrl)\n    if (enablePreviewModeUrl) {\n      const enablePreviewModeRequestUrl = new URL(enablePreviewModeUrl)\n      const {searchParams} = enablePreviewModeRequestUrl\n      searchParams.set(urlSearchParamPreviewSecret, context.previewUrlSecret)\n      searchParams.set(urlSearchParamPreviewPerspective, context.studioPreviewPerspective)\n      if (previewUrl.pathname !== enablePreviewModeRequestUrl.pathname) {\n        searchParams.set(\n          urlSearchParamPreviewPathname,\n          `${previewUrl.pathname}${previewUrl.search}`,\n        )\n      }\n\n      return enablePreviewModeRequestUrl.toString()\n    }\n    return previewUrl.toString()\n  }\n}\n\nexport type {PreviewUrlResolver, PreviewUrlResolverContext, PreviewUrlResolverOptions}\n", "const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys = null, preload = false, config = {}) {\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n", "import type {SanityClient, SyncTag} from '@sanity/client'\nimport {\n  vercelProtectionBypassSchemaId as _id,\n  vercelProtectionBypassSchemaType as _type,\n  apiVersion,\n  fetchVercelProtectionBypassSecret,\n  tag,\n} from './constants'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enableVercelProtectionBypass(\n  _client: SanityClient,\n  secret: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport async function disableVercelProtectionBypass(_client: SanityClient): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport function subcribeToVercelProtectionBypass(\n  client: SanityClient,\n  onChange: (secret: string | null) => void,\n): () => void {\n  let controller = new AbortController()\n  let usedTags: SyncTag[] = []\n  async function fetchSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n    const {result, syncTags} = await client.fetch<string | null>(\n      fetchVercelProtectionBypassSecret,\n      {},\n      {\n        filterResponse: false,\n        lastLiveEventId,\n        tag: 'preview-url-secret.fetch-vercel-bypass-protection-secret',\n      },\n    )\n    if (Array.isArray(syncTags)) {\n      usedTags = syncTags\n    }\n    if (!signal.aborted) {\n      onChange(result)\n    }\n  }\n  const subscription = client.live.events().subscribe({\n    next: (event) => {\n      if (event.type === 'message') {\n        controller.abort()\n        controller = new AbortController()\n        if (event.tags.some((tag) => usedTags.includes(tag))) {\n          fetchSecret(event.id, controller.signal)\n        }\n      }\n    },\n    // eslint-disable-next-line no-console\n    error: (reason) => console.error(reason),\n  })\n\n  fetchSecret(null, controller.signal)\n\n  return () => {\n    subscription.unsubscribe()\n    controller.abort()\n  }\n}\n\nexport type {SanityClientLike}\n", "import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n", "export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n", "import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n", "import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n", "import {useMemo} from 'react'\n\nimport {debounce} from '../lib/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n", "/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  // eslint-disable-next-line no-eq-null\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n", "// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n", "/* eslint-disable no-nested-ternary */\nimport {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n", "/* eslint-disable no-console */\n\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): React.JSX.Element {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n", "import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n", "import {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n", "import {type Path} from 'sanity'\nimport {StructureToolProvider} from 'sanity/structure'\n\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n", "import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  draft?: PreviewValue | Partial<SanityDocument> | null\n  published?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      '',\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId])\n\n  return preview\n}\n", "import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  type Path,\n  PreviewCard,\n  SanityDefaultPreview,\n  type SanityDocument,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          value: mainDocumentState!.document! as SanityDocument,\n          published: previewState.published,\n          draft: previewState.draft,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n", "import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n", "import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n", "import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {\n  type CommentIntentGetter,\n  CommentsIntentProvider,\n  type Path,\n  type SanityDocument,\n} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n", "import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigate, type PresentationNavigateContextValue} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n", "import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n", "import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n", "import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n", "import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n", "import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useId} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants, style} = props\n  const id = useId()\n\n  return (\n    <>\n      <IFrameElement\n        style={{\n          ...style,\n          // useId() guarantees that the ID will be unique, even if we add support for multiple iframe instances,\n          // while `view-transition-class: presentation-tool-iframe` provides userland a way to customize the transition with CSS if they wish\n          viewTransitionName: `presentation-tool-iframe-${id.replace(/[^a-zA-Z0-9-_]/g, '_')}`,\n        }}\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n", "import {LaunchIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n", "import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(`${origin}/`) && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? `${origin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n", "/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition,no-nested-ternary */\nimport {type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: string\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret ? setSecretSearchParams(initialUrl, secret, previewLocationRoute, perspective) : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n", "import {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, type ButtonTone, Card, Flex, Hotkeys, Menu, Stack, Switch, Text} from '@sanity/ui'\nimport {type ReactNode, type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport {type HeaderOptions, type PresentationPerspective} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\nconst PERSPECTIVE_TITLE_KEY: Record<PresentationPerspective, string> = {\n  previewDrafts: 'preview-frame.perspective.previewDrafts.title',\n  published: 'preview-frame.perspective.published.title',\n}\n\nconst PERSPECTIVE_TONES: Record<PresentationPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n}\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    loadersConnection,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setPerspective,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <MenuButton\n          button={\n            <Button\n              iconRight={ChevronDownIcon}\n              mode=\"bleed\"\n              text={t(\n                PERSPECTIVE_TITLE_KEY[\n                  loadersConnection === 'connected' ? perspective : 'previewDrafts'\n                ],\n              )}\n              loading={loadersConnection === 'reconnecting' && iframe.status !== 'loaded'}\n              disabled={loadersConnection !== 'connected'}\n            />\n          }\n          id=\"perspective-menu\"\n          menu={\n            <Menu style={{maxWidth: 240}}>\n              <MenuItem\n                onClick={() => setPerspective('previewDrafts')}\n                pressed={perspective === 'previewDrafts'}\n                tone={PERSPECTIVE_TONES.previewDrafts}\n                renderMenuItem={() => (\n                  <Flex align=\"flex-start\" gap={3}>\n                    <Box flex=\"none\">\n                      <Text size={1}>\n                        <EditIcon />\n                      </Text>\n                    </Box>\n                    <Stack flex={1} space={2}>\n                      <Text size={1} weight=\"medium\">\n                        {t(PERSPECTIVE_TITLE_KEY.previewDrafts)}\n                      </Text>\n                      <Text muted size={1}>\n                        {t('preview-frame.perspective.previewDrafts.text')}\n                      </Text>\n                    </Stack>\n                    <Box flex=\"none\">\n                      <Text\n                        muted\n                        size={1}\n                        style={{\n                          opacity: perspective === 'previewDrafts' ? 1 : 0,\n                        }}\n                      >\n                        <CheckmarkIcon />\n                      </Text>\n                    </Box>\n                  </Flex>\n                )}\n              />\n              <MenuItem\n                onClick={() => setPerspective('published')}\n                pressed={perspective === 'published'}\n                tone={PERSPECTIVE_TONES.published}\n                renderMenuItem={() => (\n                  <Flex align=\"flex-start\" gap={3}>\n                    <Box flex=\"none\">\n                      <Text size={1}>\n                        <PublishIcon />\n                      </Text>\n                    </Box>\n                    <Stack flex={1} space={2}>\n                      <Text size={1} weight=\"medium\">\n                        {t(PERSPECTIVE_TITLE_KEY.published)}\n                      </Text>\n                      <Text muted size={1}>\n                        {t('preview-frame.perspective.published.text')}\n                      </Text>\n                    </Stack>\n                    <Box flex=\"none\">\n                      <Text\n                        muted\n                        size={1}\n                        style={{\n                          opacity: perspective === 'published' ? 1 : 0,\n                        }}\n                      >\n                        <CheckmarkIcon />\n                      </Text>\n                    </Box>\n                  </Flex>\n                )}\n              />\n            </Menu>\n          }\n          popover={{\n            constrainSize: true,\n            placement: 'bottom',\n            portal: true,\n          }}\n        />\n      </Flex>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nfunction PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n\n/** @internal */\nexport function usePresentationPreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): () => ReactNode {\n  const Component = useCallback(() => {\n    return <PreviewHeader {...props} />\n  }, [props])\n\n  return Component\n}\n", "/* eslint-disable react/no-unused-prop-types,no-nested-ternary */\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {Card, Code, Flex, Label, Spinner, Stack, Text, usePrefersReducedMotion} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {useTranslation} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {IFrame} from './IFrame'\nimport {usePresentationPreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setPerspective: (perspective: 'previewDrafts' | 'published') => void\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      dispatch,\n      iframe,\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = stablePerspective === null ? perspective : stablePerspective\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const PreviewHeader = usePresentationPreviewHeader({\n      ...props,\n      iframeRef: ref,\n      options: header,\n    })\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      loading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition(() => flushSync(() => update()))\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          <PreviewHeader />\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n", "import {useEffect, useRef} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\n\n/**\n * Similar to `useEffect`, but only execute the callback on value change.\n * @param value - The value to watch for changes.\n * @param callback - The callback to execute when the value changes.\n * @param initialValue - An optional initial value to compare against.\n * @param comparator - An optional comparator function for determining changes, useful if the value is non-primitive. Should return true if the callback should be executed.\n * @internal\n */\nexport function useEffectOnChange<T>(\n  value: T,\n  _callback: (value: T, prevValue: T | undefined) => void | (() => void),\n  initialValue?: T,\n  comparator?: (a: T, b?: T) => boolean | undefined,\n): void {\n  const previousValueRef = useRef<T | undefined>(initialValue)\n  const callback = useEffectEvent(_callback)\n\n  useEffect(() => {\n    const prev = previousValueRef.current\n    previousValueRef.current = value\n    if (comparator ? comparator(value, prev) : value !== prev) {\n      return callback(value, prev)\n    }\n    return undefined\n  }, [callback, comparator, value])\n}\n", "import {type FunctionComponent} from 'react'\nimport {useEditState} from 'sanity'\n\nimport {type PresentationNavigate} from './types'\nimport {useEffectOnChange} from './util/useEffectOnChange'\n\ninterface RevisionSwitcherProps {\n  documentId: string\n  documentRevision: string | undefined\n  documentType: string\n  navigate: PresentationNavigate\n  perspective: 'previewDrafts' | 'published'\n}\n\n/**\n * Renderless component to handle displaying the correct revision when the\n * perspective is switched. When the perspective changes to 'published', the\n * `rev` parameter correpsonding to the published document is resolved from the\n * published edit state. When the perspective changes to 'previewDrafts', the\n * `rev` parameter is removed, as the latest draft should be displayed.\n * @internal\n */\nexport const RevisionSwitcher: FunctionComponent<RevisionSwitcherProps> = function (props) {\n  const {documentId, documentType, navigate, perspective, documentRevision} = props\n\n  const editState = useEditState(documentId, documentType)\n\n  useEffectOnChange(perspective, (value) => {\n    let rev: string | undefined = undefined\n    if (value === 'published' && editState.published) {\n      const {_updatedAt, _rev} = editState.published\n      rev = `${_updatedAt}/${_rev}`\n    }\n    if (documentRevision !== rev) {\n      navigate({}, {rev}, true)\n    }\n  })\n\n  return null\n}\n", "/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n", "import {type ClientPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: ClientPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n", "import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const base =\n      // eslint-disable-next-line no-nested-ternary\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n    const url = new URL(relativeUrl, base)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: 'previewDrafts',\n            signal: controller.signal,\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, handleResponse, previewUrl, relativeUrl, resolvers])\n\n  return mainDocumentState\n}\n", "import { getPublishedId, studioPath } from \"@sanity/client/csm\";\nimport { pipe, string, minLength, optional, object, is, record, unknown, safeParse, parse } from \"valibot\";\nconst lengthyStr$1 = pipe(string(), minLength(1)), optionalLengthyStr = optional(lengthyStr$1), sanityNodeSchema = object({\n  baseUrl: lengthyStr$1,\n  dataset: optionalLengthyStr,\n  id: lengthyStr$1,\n  path: lengthyStr$1,\n  projectId: optionalLengthyStr,\n  tool: optionalLengthyStr,\n  type: optionalLengthyStr,\n  workspace: optionalLengthyStr\n});\nfunction isValidSanityNode(node) {\n  return is(sanityNodeSchema, node);\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction pathToUrlString(path) {\n  let str = \"\";\n  for (const segment of path) {\n    if (typeof segment == \"string\") {\n      str && (str += \".\"), str += segment;\n      continue;\n    }\n    if (typeof segment == \"number\") {\n      str && (str += \":\"), str += `${segment}`;\n      continue;\n    }\n    if (isArray(segment)) {\n      str && (str += \":\"), str += `${segment.join(\",\")}}`;\n      continue;\n    }\n    if (segment._key) {\n      str && (str += \":\"), str += `${segment._key}`;\n      continue;\n    }\n  }\n  return str;\n}\nfunction encodeSanityNodeData(node) {\n  const { id: _id, path, baseUrl, tool, workspace, type } = node;\n  return isValidSanityNode(node) ? [\n    [\"id\", getPublishedId(_id)],\n    [\"type\", type],\n    [\"path\", pathToUrlString(studioPath.fromString(path))],\n    [\"base\", encodeURIComponent(baseUrl)],\n    [\"workspace\", workspace],\n    [\"tool\", tool]\n  ].filter(([, value]) => !!value).map((part) => part.join(\"=\")).join(\";\") : void 0;\n}\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nconst RE_SEGMENT_WITH_INDEX = /^([\\w-]+):(0|[1-9][0-9]*)$/, RE_SEGMENT_WITH_TUPLE = /^([\\w-]+):([0-9]+),([0-9]+)$/, RE_SEGMENT_WITH_KEY = /^([\\w-]+):([\\w-]+)$/;\nfunction urlStringToPath(str) {\n  const path = [];\n  for (const segment of str.split(\".\")) {\n    const withIndex = RE_SEGMENT_WITH_INDEX.exec(segment);\n    if (withIndex) {\n      path.push(withIndex[1], Number(withIndex[2]));\n      continue;\n    }\n    const withTuple = RE_SEGMENT_WITH_TUPLE.exec(segment);\n    if (withTuple) {\n      path.push(withTuple[1], [Number(withTuple[2]), Number(withTuple[3])]);\n      continue;\n    }\n    const withKey = RE_SEGMENT_WITH_KEY.exec(segment);\n    if (withKey) {\n      path.push(withKey[1], { _key: withKey[2] });\n      continue;\n    }\n    path.push(segment);\n  }\n  return path;\n}\nconst lengthyStr = pipe(string(), minLength(1)), sanityLegacyNodeSchema = object({\n  origin: lengthyStr,\n  href: lengthyStr,\n  data: optional(record(string(), unknown()))\n});\nfunction decodeSanityString(str) {\n  const data = str.split(\";\").reduce((acc, segment) => {\n    const [key, value] = segment.split(\"=\");\n    if (!key || segment.includes(\"=\") && !value) return acc;\n    switch (key) {\n      case \"id\":\n        acc.id = value;\n        break;\n      case \"type\":\n        acc.type = value;\n        break;\n      case \"path\":\n        acc.path = studioPath.toString(urlStringToPath(value));\n        break;\n      case \"base\":\n        acc.baseUrl = decodeURIComponent(value);\n        break;\n      case \"tool\":\n        acc.tool = value;\n        break;\n      case \"workspace\":\n        acc.workspace = value;\n        break;\n      case \"projectId\":\n        acc.projectId = value;\n        break;\n      case \"dataset\":\n        acc.dataset = value;\n        break;\n    }\n    return acc;\n  }, {});\n  if (isValidSanityNode(data))\n    return data;\n}\nfunction decodeSanityObject(data) {\n  const sanityNode = safeParse(sanityNodeSchema, data);\n  if (sanityNode.success)\n    return sanityNode.output;\n  const sanityLegacyNode = safeParse(sanityLegacyNodeSchema, data);\n  if (sanityLegacyNode.success)\n    try {\n      const url = new URL(\n        sanityLegacyNode.output.href,\n        typeof document > \"u\" ? \"https://example.com\" : location.origin\n      );\n      return url.searchParams.size > 0 ? parse(sanityNodeSchema, Object.fromEntries(url.searchParams.entries())) : sanityLegacyNode.output;\n    } catch (err) {\n      return console.error(\"Failed to parse sanity node\", err), sanityLegacyNode.output;\n    }\n}\nfunction decodeSanityNodeData(data) {\n  if (typeof data == \"object\" && data !== null)\n    return decodeSanityObject(data);\n  try {\n    const obj = JSON.parse(data);\n    return decodeSanityObject(obj);\n  } catch {\n    return decodeSanityString(data);\n  }\n}\nexport {\n  createDataAttribute,\n  decodeSanityNodeData,\n  encodeSanityNodeData,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n", "import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {parseRouterState} from './lib/parse'\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state.id) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n", "import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n", "import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {type SanityClient, useActiveWorkspace, useClient, useCurrentUser} from 'sanity'\nimport {suspend} from 'suspend-react'\n\nimport {API_VERSION} from './constants'\nimport {type PreviewUrlOption} from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: 'published' | 'previewDrafts',\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective,\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol('sanity/presentation/resolveUUID')\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return undefined\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      'sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return undefined\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n", "import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n", "/* eslint-disable max-statements,@typescript-eslint/no-shadow */\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useReducer, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE, LIVE_DRAFT_EVENTS_ENABLED} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {RevisionSwitcher} from './RevisionSwitcher'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPerspective,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n}): React.JSX.Element {\n  const {\n    canCreateUrlPreviewSecrets,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n  } = props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.perspective === 'published' ? 'published' : 'previewDrafts',\n    routerSearchParams.preview || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const perspective = useMemo(\n    () => (params.perspective ? 'published' : 'previewDrafts'),\n    [params.perspective],\n  )\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate(\n            {},\n            {preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`},\n          )\n        } catch {\n          handleNavigate({}, {preview: url})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, handleNavigate, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post('presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, {rev: undefined})\n    }\n    idRef.current = params.id\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  const setPerspective = useCallback(\n    (next: PresentationPerspective) => {\n      // Omit the perspective URL search param if the next perspective state is\n      // the default: 'previewDrafts'\n      const perspective = next === 'previewDrafts' ? undefined : next\n      navigate({}, {perspective})\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setPerspective={setPerspective}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller &&\n          (LIVE_DRAFT_EVENTS_ENABLED ? (\n            <LiveQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n            />\n          ) : (\n            <LoaderQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n              documentsOnPage={documentsOnPage}\n            />\n          ))}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && <PostMessageDocuments comlink={visualEditingComlink} />}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n        {params.id && params.type && (\n          <RevisionSwitcher\n            documentId={params.id}\n            documentRevision={params.rev}\n            documentType={params.type}\n            navigate={navigate}\n            perspective={perspective}\n          />\n        )}\n      </Suspense>\n    </>\n  )\n}\n\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n", "import {apiVersion} from '@sanity/preview-url-secret/constants'\nimport {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n", "import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState} from 'react'\nimport {type PermissionCheckResult, type Tool, useGrantsStore, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    vercelProtectionBypassReadyState === 'loading' ||\n    (willGeneratePreviewUrlSecret &&\n      (!previewAccessSharingCreatePermission ||\n        typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n        !previewAccessSharingUpdatePermission ||\n        typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n        !previewUrlSecretPermission ||\n        !previewAccessSharingReadPermission ||\n        typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n        typeof previewUrlSecretPermission.granted === 'undefined'))\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],
  "mappings": "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",
  "names": ["_id", "_type", "value", "_a", "result", "char", "prefix", "i", "entry", "tag", "PostMessageFeatures", "props", "$", "_c", "comlink", "t0", "t1", "on", "_temp", "useEffect", "memo", "features", "optimistic", "debounce", "fn", "timeout", "timer", "args", "clearTimeout", "setTimeout", "apply", "SharedStateProvider", "children", "Symbol", "for", "sharedState", "useRef", "t2", "state", "current", "t3", "key", "value", "post", "setValue", "t4", "key_0", "removeValue", "t5", "t6", "context", "t7", "Root", "styled", "div", "Panel", "defaultSize", "id", "minWidth", "maxWidth", "order", "undefined", "useContext", "PresentationPanelsContext", "Error", "getPanelStyle", "registerElement", "unregisterElement", "style", "type", "useLayoutEffect", "itemKey", "getStoredItem", "JSON", "parse", "localStorage", "getItem", "setStoredItem", "data", "setItem", "stringify", "getKeyForPanels", "panels", "map", "panel", "join", "usePanelsStorage", "get", "_temp2", "set", "_temp3", "setDebounced", "panels_0", "widths", "stored_0", "stored", "Array", "isArray", "some", "val", "getNextWidth", "nextWidth", "containerWidth", "maxWidthPx", "minWidthPx", "Math", "min", "max", "getNextWidths", "delta", "panelBefore", "panelAfter", "panelsState", "initialDragState", "prevWidths", "initialWidths", "nextWidths", "pivotPanel", "index", "findIndex", "width", "abs", "deltaApplied", "deltaRemaining", "toPrecision", "localeCompare", "numeric", "length", "getPanelWidth", "getOffset", "event", "handleElement", "initialOffset", "initialHandleElementRect", "pointerOffset", "clientX", "elementOffset", "getBoundingClientRect", "left", "isPanel", "element", "isResizer", "getSortedElements", "elements", "from", "values", "sort", "a", "b", "validateWidths", "widthsToValidate", "total", "reduce", "remainingWidth", "toFixed", "getDefaultWidths", "panelsWithoutWidth", "remainingWidthTotal", "widthsWithNulls", "defaultWidth", "PanelsWrapper", "Panels", "panelsEl", "Map", "setElements", "useState", "filter", "setWidths", "activeResizer", "setActiveResizer", "panelsRef", "flexGrow", "pointerEvents", "id_0", "prev", "has", "next", "t8", "id_1", "prev_0", "next_0", "delete", "t9", "window", "innerWidth", "dragOffset", "resizerIndex", "resizerRect", "startX", "dragRef", "t10", "id_2", "elementsArr", "el", "resizer", "resizeElement", "acc", "el_0", "i", "acc_0", "el_1", "i_0", "pageX", "startDragging", "t11", "stopDragging", "t12", "id_3", "event_0", "preventDefault", "stopPropagation", "resizer_0", "resizeElement_0", "offset", "rect", "prevWidth", "i_1", "drag", "t13", "t14", "storage", "t15", "t16", "widths_0", "storedWidths", "validatedStoredWidths", "defaultWidths", "t17", "t18", "t19", "t20", "resizeObserver", "ResizeObserver", "prevWidths_0", "nextWidths_0", "prevWidth_0", "i_2", "observe", "disconnect", "t21", "t22", "t23", "t24", "ErrorCard", "message", "onContinueAnyway", "onRetry", "restProps", "t", "useTranslation", "presentationLocaleNamespace", "retryButton", "continueAnywayButton", "Container", "encodeQueryString", "params", "parts", "Object", "entries", "resolveQueryStringFromParams", "nextParams", "allowed", "safeNextParams", "includes", "obj", "BackLink", "forwardRef", "ref", "searchParams", "_searchParams", "ReferenceChildLink", "documentId", "documentType", "parentRefPath", "template", "PresentationPaneRouterProvider", "onStructureParams", "structureParams", "refs", "routerState", "resolvePathFromState", "useRouter", "fromEntries", "routerSearchParams", "useUnique", "path", "qs", "createPathWithParams", "childLinkProps", "childId", "find", "r", "_id", "getPublishedId", "_type", "backLinkProps", "childLinkProps_0", "nextParams_0", "inspect", "groupIndex", "siblingIndex", "payload", "hasGroupSiblings", "groupLength", "routerPanesState", "ChildLink", "ParameterizedLink", "closeCurrentAndAfter", "handleEditReference", "replaceCurrent", "_temp4", "closeCurrent", "_temp5", "duplicateCurrent", "_temp6", "setView", "_temp7", "setParams", "setPayload", "_temp8", "navigateIntent", "_temp9", "intentName", "intentParams", "options_0", "console", "warn", "options", "viewId", "pane_0", "pane", "RootLayout", "PaneLayout", "Flex", "WrappedCode", "Code", "DocumentListPane", "mainDocumentState", "devMode", "usePresentationTool", "document", "ids", "schemaTypeName", "title", "errorParams", "setErrorParams", "handleRetry", "error", "StructureDocumentListPane", "r_0", "DocumentPane", "onFocusPath", "templateParams", "decodeJsonParams", "templateParameters", "paneDocumentNode", "height", "StructureDocumentPane", "DocumentPanel", "usePreviewState", "schemaType", "documentPreviewStore", "useDocumentPreviewStore", "preview", "setPreview", "subscription", "getPreviewStateObservable", "subscribe", "unsubscribe", "ContentEditor", "schema", "useSchema", "props_0", "MainDocumentLink", "previewState", "bb0", "draft", "published", "getPreviewValueWithFallback", "usePanelId", "uuid", "panelId", "Resizer", "ResizerInner", "$disabled", "PanelResizer", "propId", "disabled", "isDragging", "nativeEvent", "onMouseDown", "e", "onDrag", "blur", "onDragStop", "resetDocumentStyles", "bodyStyle", "body", "documentStyle", "documentElement", "cursor", "userSelect", "removeProperty", "addEventListener", "removeEventListener", "PresentationContentWrapper", "setDisplayedDocument", "getCommentIntent", "PresentationContent", "documentsOnPage", "PresentationNavigateProvider", "navigate", "_navigate", "useLocalState", "defaultValue", "usePresentationNavigator", "unstable_navigator", "navigatorProvided", "component", "_navigatorEnabled", "setNavigatorEnabled", "navigatorEnabled", "toggleNavigator", "Component", "enabled", "NavigatorComponent", "navigatorDisabled", "Navigator", "PresentationParamsProvider", "PresentationProvider", "name", "IFrameElement", "motion", "create", "iframe", "IFrameOverlay", "Box", "IFrame", "animate", "initial", "onLoad", "preventClick", "src", "variants", "useId", "replace", "viewTransitionName", "OpenPreviewButton", "openPopup", "previewLocationOrigin", "previewLocationRoute", "currentTarget", "href", "handleOpenPopup", "LaunchIcon", "PreviewLocationInput", "fontSize", "onChange", "origin", "padding", "prefix", "suffix", "basePath", "useActiveWorkspace", "activeWorkspace", "inputRef", "sessionValue", "setSessionValue", "customValidity", "setCustomValidity", "handleChange", "absoluteValue", "startsWith", "nextValue", "slice", "handleKeyDown", "handleBlur", "icon", "ResetIcon", "zIndex", "QRCodeSVG", "lazy", "QrCodeLogoSize", "QrCodeLogoPadding", "QrSize", "StyledSanityMonogram", "SanityMonogram", "MotionSpinner", "Spinner", "MotionText", "Text", "MotionMonogram", "SharePreviewMenu", "canToggleSharePreviewAccess", "canUseSharedPreviewAccess", "initialUrl", "perspective", "push", "pushToast", "useToast", "client", "useClient", "apiVersion", "API_VERSION", "currentUser", "useCurrentUser", "loading", "setLoading", "enabling", "setEnabling", "disabling", "setDisabling", "secret", "setSecret", "busy", "url", "useMemo", "setSecretSearchParams", "setError", "handleUnableToToggle", "useCallback", "closable", "status", "handleDisableSharing", "disablePreviewAccessSharing", "location", "handleEnableSharing", "previewUrlSecret", "enablePreviewAccessSharing", "handleCopyUrl", "navigator", "clipboard", "writeText", "toString", "controller", "AbortController", "usedTags", "fetchShareSecret", "lastLiveEventId", "signal", "result", "syncTags", "fetch", "fetchSharedAccessQuery", "filterResponse", "tag", "aborted", "live", "events", "abort", "tags", "finally", "ShareIcon", "justifyContent", "alignItems", "gridTemplateColumns", "gridTemplateRows", "position", "aspectRatio", "display", "opacity", "textWrap", "textAlign", "CopyIcon", "constrainSize", "placement", "portal", "displayName", "PERSPECTIVE_TITLE_KEY", "previewDrafts", "PERSPECTIVE_TONES", "PreviewHeaderDefault", "canSharePreviewAccess", "dispatch", "iframeRef", "loadersConnection", "onPathChange", "onRefresh", "overlaysConnection", "previewUrl", "setPerspective", "setViewport", "targetOrigin", "toggleOverlay", "viewport", "visualEditing", "overlaysEnabled", "toggleViewportSize", "ACTION_IFRAME_RELOAD", "assign", "handleRefresh", "previewURL", "URL", "pathname", "search", "withoutSecretSearchParams", "PanelLeftIcon", "content", "fallbackPlacements", "whiteSpace", "marginTop", "marginBottom", "lineHeight", "borderRadius", "margin", "t25", "t26", "t27", "t28", "t29", "t30", "RefreshIcon", "t31", "t32", "t33", "t34", "t35", "t36", "t37", "t38", "ChevronDownIcon", "t39", "t40", "t41", "t42", "t43", "t44", "t45", "t46", "t47", "t48", "t49", "t50", "t51", "t52", "t53", "t54", "t55", "t56", "MobileDeviceIcon", "DesktopIcon", "t57", "t58", "t59", "t60", "PreviewHeader", "renderDefault", "HeaderComponent", "header", "minHeight", "usePresentationPreviewHeader", "MotionFlex", "Preview", "forwardedRef", "vercelProtectionBypass", "stablePerspective", "setStablePerspective", "urlPerspective", "urlSearchParamPreviewPerspective", "urlSearchParamVercelProtectionBypass", "urlSearchParamVercelSetBypassCookie", "prefersReducedMotion", "usePrefersReducedMotion", "timedOut", "setTimedOut", "refreshing", "somethingIsWrong", "setSomethingIsWrong", "iframeIsBusy", "handleContinueAnyway", "setContinueAnyway", "continueAnyway", "showOverlaysConnectionStatus", "setShowOverlaysConnectionState", "MAX_TIME_TO_OVERLAYS_CONNECTION", "onIFrameLoad", "ACTION_IFRAME_LOADED", "instance", "activeElement", "dispatchEvent", "MouseEvent", "bubbles", "cancelable", "preventIframeInteraction", "canUseViewTransition", "useSyncExternalStore", "CSS", "supports", "iframeAnimations", "currentViewport", "setCurrentViewport", "iframeStyle", "setIframeStyle", "iframeVariants", "update", "startViewTransition", "flushSync", "duration", "spinnerVariants", "inset", "backdropFilter", "WebkitBackdropFilter", "WebkitTransition", "sizes", "errorVariants", "background", "desktop", "mobile", "exit", "boxShadow", "scale", "idle", "reloading", "active", "useEffectOnChange", "_callback", "initialValue", "comparator", "previousValueRef", "callback", "useEffectEvent", "RevisionSwitcher", "documentRevision", "editState", "useEditState", "rev", "_updatedAt", "_rev", "defineWarnOnce", "warned", "warnOnceAboutCrossDatasetReference", "useDocumentsOnPage", "frameStateRef", "setPublished", "setPreviewDrafts", "urlRef", "setDocumentsOnPage", "sourceDocuments", "documents", "sourceDocument", "_projectId", "setCache", "cache", "isEqual", "uniqueDocuments", "forEach", "doc", "fnOrObj", "arg", "Function", "getQueryFromResult", "resolver", "resolve", "getParamsFromResult", "getRouteContext", "route", "routes", "absolute", "match", "decode", "decodeURIComponent", "useMainDocument", "navigationHistory", "resolvers", "relativeUrl", "setMainDocumentState", "mainDocumentIdRef", "handleResponse", "at", "base", "query", "then", "catch", "lengthyStr$1", "pipe", "string", "minLength", "optionalLengthyStr", "optional", "object", "baseUrl", "dataset", "projectId", "tool", "workspace", "parseId", "rawId", "segments", "split", "shift", "parsePath", "rawPath", "studioPath", "urlStringToPath", "parseRouterState", "pruneObject", "useParams", "initialPreviewUrl", "routerNavigate", "since", "view", "pathKey", "instruction", "comment", "changesInspectorTab", "routerStateRef", "setNavigationHistory", "nextState", "nextSearchState", "forceReplace", "routerSearchState", "searchState", "usePopups", "popups", "setPopups", "Set", "open", "source", "add", "unsubs", "size", "closed", "addTarget", "unsub", "interval", "setInterval", "POPUP_CHECK_INTERVAL", "clearInterval", "usePreviewUrl", "toolName", "studioPreviewPerspective", "previewSearchParam", "canCreateUrlPreviewSecrets", "workspaceName", "deps", "useSuspendCacheKeys", "usePreviewUrlSecret", "suspend", "resolvedUrl", "resultUrl", "restoredUrl", "definePreviewUrl", "studioBasePath", "resolveUUID", "cachedPreviewSearchParam", "setCachedPreviewSearchParam", "timeoutRef", "secretLastExpiredAt", "setSecretLastExpiredAt", "createPreviewSecret", "startTransition", "expiresAt", "getTime", "Date", "now", "useStatus", "statusMap", "setStatusMap", "handshaking", "memoStatus", "connection", "hasConnected_0", "hasConnected", "status_1", "setStatusFromEvent", "status_0", "LoaderQueries", "PostMessageDocuments", "PostMessageRefreshMutations", "PostMessagePerspective", "PostMessagePreviewSnapshots", "PostMessageSchema", "PostMessageTelemetry", "PresentationTool", "components", "_previewUrl", "DEFAULT_TOOL_NAME", "unstable_header", "draftMode", "shareAccess", "previewMode", "option", "hostname", "setController", "visualEditingComlink", "setVisualEditingComlink", "useReducer", "presentationReducer", "presentationReducerInit", "useProjectId", "useDataset", "mainDocuments", "setOverlaysConnection", "setLoadersConnection", "previewKitConnection", "setPreviewKitConnection", "isLoading", "target", "contentWindow", "createController", "destroy", "handleNavigate", "createChannel", "heartbeat", "connectTo", "createConnectionMachine", "provide", "actors", "createCompatibilityActors", "urlWithoutSearch", "URLSearchParams", "ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE", "refreshRef", "ACTION_IFRAME_REFRESH", "onStatus", "stop", "start", "handleFocusPath", "nextPath", "handlePreviewPath", "handleStructureParams", "displayedDocument", "handleKeyUp", "isAltKey", "handleKeydown", "isHotkey", "boundaryElement", "setBoundaryElement", "PresentationNavigator", "idRef", "fallback", "livePreviewEnabled", "useWorkspace", "COMMENTS_INSPECTOR_NAME", "mode", "EDIT_INTENT_MODE", "LIVE_DRAFT_EVENTS_ENABLED", "IS_MAC", "test", "platform", "MODIFIERS", "alt", "ctrl", "mod", "keys", "every", "toUpperCase", "useVercelBypassSecret", "vercelProtectionBypassReadyState", "ready", "vercelProtectionBypassSecret", "setVercelProtectionBypassSecret", "subcribeToVercelProtectionBypass", "PresentationToolGrantsCheck", "willGeneratePreviewUrlSecret", "grantsStore", "useGrantsStore", "previewAccessSharingCreatePermission", "setCreateAccessSharingPermission", "previewAccessSharingUpdatePermission", "setUpdateAccessSharingPermission", "previewAccessSharingReadPermission", "setReadAccessSharingPermission", "previewUrlSecretPermission", "setPreviewUrlSecretPermission", "previewCreateAccessSharingPermissionSubscription", "checkDocumentPermission", "schemaIdSingleton", "schemaTypeSingleton", "previewUpdateAccessSharingPermissionSubscription", "previewReadAccessSharingPermissionSubscription", "previewUrlSecretPermissionSubscription", "granted", "raf", "requestAnimationFrame", "cancelAnimationFrame"]
}
