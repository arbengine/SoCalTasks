"use strict";
Object.defineProperty(exports, "__esModule", { value: !0 });
var plugin_eventListener = require("../_chunks-cjs/plugin.event-listener.cjs"), reactCompilerRuntime = require("react-compiler-runtime"), React = require("react"), behavior_markdown = require("../_chunks-cjs/behavior.markdown.cjs");
function _interopDefaultCompat(e) {
  return e && typeof e == "object" && "default" in e ? e : { default: e };
}
var React__default = /* @__PURE__ */ _interopDefaultCompat(React);
const EditorRefPlugin = React__default.default.forwardRef((_, ref) => {
  const $ = reactCompilerRuntime.c(2), editor = plugin_eventListener.useEditor(), portableTextEditorRef = React__default.default.useRef(editor);
  let t0, t1;
  return $[0] === Symbol.for("react.memo_cache_sentinel") ? (t0 = () => portableTextEditorRef.current, t1 = [], $[0] = t0, $[1] = t1) : (t0 = $[0], t1 = $[1]), React__default.default.useImperativeHandle(ref, t0, t1), null;
});
EditorRefPlugin.displayName = "EditorRefPlugin";
function MarkdownPlugin(props) {
  const editor = plugin_eventListener.useEditor();
  return React.useEffect(() => {
    const unregisterBehaviors = behavior_markdown.createMarkdownBehaviors(props.config).map((behavior) => editor.registerBehavior({
      behavior
    }));
    return () => {
      for (const unregisterBehavior of unregisterBehaviors)
        unregisterBehavior();
    };
  }, [editor, props.config]), null;
}
exports.EventListenerPlugin = plugin_eventListener.EventListenerPlugin;
exports.EditorRefPlugin = EditorRefPlugin;
exports.MarkdownPlugin = MarkdownPlugin;
//# sourceMappingURL=index.cjs.map
