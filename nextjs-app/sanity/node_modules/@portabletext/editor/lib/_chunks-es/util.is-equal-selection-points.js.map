{"version":3,"file":"util.is-equal-selection-points.js","sources":["../../src/utils/util.is-keyed-segment.ts","../../src/utils/util.get-block-end-point.ts","../../src/utils/util.get-block-start-point.ts","../../src/utils/util.is-equal-selection-points.ts"],"sourcesContent":["import type {KeyedSegment, PathSegment} from '@sanity/types'\n\n/**\n * @public\n */\nexport function isKeyedSegment(segment: PathSegment): segment is KeyedSegment {\n  return typeof segment === 'object' && segment !== null && '_key' in segment\n}\n","import {\n  isPortableTextSpan,\n  isPortableTextTextBlock,\n  type KeyedSegment,\n  type PortableTextBlock,\n} from '@sanity/types'\nimport type {EditorSelectionPoint} from '../types/editor'\n\n/**\n * @public\n */\nexport function getBlockEndPoint({\n  node,\n  path,\n}: {\n  node: PortableTextBlock\n  path: [KeyedSegment]\n}): EditorSelectionPoint {\n  if (isPortableTextTextBlock(node)) {\n    const lastChild = node.children[node.children.length - 1]\n\n    if (lastChild) {\n      return {\n        path: [...path, 'children', {_key: lastChild._key}],\n        offset: isPortableTextSpan(lastChild) ? lastChild.text.length : 0,\n      }\n    }\n  }\n\n  return {\n    path,\n    offset: 0,\n  }\n}\n","import {\n  isPortableTextTextBlock,\n  type KeyedSegment,\n  type PortableTextBlock,\n} from '@sanity/types'\nimport type {EditorSelectionPoint} from '../types/editor'\n\n/**\n * @public\n */\nexport function getBlockStartPoint({\n  node,\n  path,\n}: {\n  node: PortableTextBlock\n  path: [KeyedSegment]\n}): EditorSelectionPoint {\n  if (isPortableTextTextBlock(node)) {\n    return {\n      path: [...path, 'children', {_key: node.children[0]._key}],\n      offset: 0,\n    }\n  }\n\n  return {\n    path,\n    offset: 0,\n  }\n}\n","import type {EditorSelectionPoint} from '../types/editor'\n\n/**\n * @public\n */\nexport function isEqualSelectionPoints(\n  a: EditorSelectionPoint,\n  b: EditorSelectionPoint,\n) {\n  return (\n    a.offset === b.offset && JSON.stringify(a.path) === JSON.stringify(b.path)\n  )\n}\n"],"names":["isKeyedSegment","segment","getBlockEndPoint","node","path","isPortableTextTextBlock","lastChild","children","length","_key","offset","isPortableTextSpan","text","getBlockStartPoint","isEqualSelectionPoints","a","b","JSON","stringify"],"mappings":";AAKO,SAASA,eAAeC,SAA+C;AAC5E,SAAO,OAAOA,WAAY,YAAYA,YAAY,QAAQ,UAAUA;AACtE;ACIO,SAASC,iBAAiB;AAAA,EAC/BC;AAAAA,EACAC;AAIF,GAAyB;AACnBC,MAAAA,wBAAwBF,IAAI,GAAG;AACjC,UAAMG,YAAYH,KAAKI,SAASJ,KAAKI,SAASC,SAAS,CAAC;AAEpDF,QAAAA;AACK,aAAA;AAAA,QACLF,MAAM,CAAC,GAAGA,MAAM,YAAY;AAAA,UAACK,MAAMH,UAAUG;AAAAA,QAAAA,CAAK;AAAA,QAClDC,QAAQC,mBAAmBL,SAAS,IAAIA,UAAUM,KAAKJ,SAAS;AAAA,MAClE;AAAA,EAAA;AAIG,SAAA;AAAA,IACLJ;AAAAA,IACAM,QAAQ;AAAA,EACV;AACF;ACvBO,SAASG,mBAAmB;AAAA,EACjCV;AAAAA,EACAC;AAIF,GAAyB;AACnBC,SAAAA,wBAAwBF,IAAI,IACvB;AAAA,IACLC,MAAM,CAAC,GAAGA,MAAM,YAAY;AAAA,MAACK,MAAMN,KAAKI,SAAS,CAAC,EAAEE;AAAAA,IAAAA,CAAK;AAAA,IACzDC,QAAQ;AAAA,EAAA,IAIL;AAAA,IACLN;AAAAA,IACAM,QAAQ;AAAA,EACV;AACF;ACvBgBI,SAAAA,uBACdC,GACAC,GACA;AACA,SACED,EAAEL,WAAWM,EAAEN,UAAUO,KAAKC,UAAUH,EAAEX,IAAI,MAAMa,KAAKC,UAAUF,EAAEZ,IAAI;AAE7E;"}